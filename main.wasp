app society {
  wasp: {
    version: "^0.16.0"
  },
  title: "Society",
  auth: {
    userEntity: User,
    methods: {
      google: {
        configFn: import { getConfig } from "@src/auth/backend/google",
        userSignupFields: import { userSignupFields } from "@src/auth/backend/google"
      }
    },
    onAuthFailedRedirectTo: "/login"
  },
  client: {
    rootComponent: import App from "@src/App",
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import { Login } from "@src/auth/frontend/login-page"
}

route RootRoute { path: "/", to: MainPage }
page MainPage {
  authRequired: true,
  component: import { MainPage } from "@src/MainPage"
}

route OnboardingRoute { path: "/on-boarding", to: OnboardingPage }
page OnboardingPage {
  authRequired: true,
  component: import { OnboardingPage } from "@src/auth/frontend/onboarding-page"
}

action updateUserDetail {
  fn: import { updateUserInfo } from "@src/auth/backend/actions",
  entities: [User]
}

action createSociety {
  fn: import { createSocietyWithBasicDeatil } from "@src/society/backend/actions",
  entities: [Society]
}

query getMySociety{
  fn: import { getSociety } from "@src/society/backend/querys",
  entities: [Society]
}

query getMyPersonalDetail{
  fn: import { getMyPersonalDetail } from "@src/tenant/backend/querys",
  entities: [PersonalInformation, AdditionalInformation]
}

action saveMyPersonalDetail{
  fn: import { saveMyPersonalDetail } from "@src/auth/backend/actions",
  entities: [PersonalInformation]
}

action saveMyAdditionalDetail{
  fn: import { saveMyAdditionalDetail } from "@src/auth/backend/actions",
  entities: [AdditionalInformation, MemberInformation]
}


route OwnerDashboardRoute { path: "/owner", to: OwnerDashboard }
page OwnerDashboard{
  authRequired: true,
  component: import { OwnerDashboard } from "@src/owner/frontend/dashboard.tsx"
}

route CreateBuildingRoute { path: "/create-building", to: CreateBuilding }
page CreateBuilding{
  authRequired: true,
  component: import { CreateBuilding } from "@src/owner/frontend/building/create-building"
}

action createBuilding {
  fn: import { createBuilding } from "@src/owner/backend/building/actions",
  entities: [Society, Building]
}

route DetailBuildingRoute { path: "/building-detail", to: DeatilBuilding }
page DeatilBuilding{
  authRequired: true,
  component: import { BuildingDetail } from "@src/owner/frontend/building/building-detail"
}

query getBuildingDetail{
  fn: import { getBuildingDetail } from "@src/owner/backend/building/querys",
  entities: [Society, Building]
}

query getBuildingList{
  fn: import { getBuildingList } from "@src/owner/backend/building/querys",
  entities: [Society, Building, Unit]
}

crud Units {
  entity: Unit,
  operations: {
    getAll: {},
    create: {},
    update: {},
    delete: {}
  },
}

route TenentOnboardingRoute { path: "/tenant-on-boarding", to: TenentOnboarding }
page TenentOnboarding {
  component: import { TenentOnboarding } from "@src/owner/frontend/tenent-onboarding/tenent-onboarding-page"
}

query getTenantList{
  fn: import { getTenantList } from "@src/owner/backend/tenent-onboarding/querys",
  entities: [User]
}

action createTenant {
  fn: import { createTenant } from "@src/owner/backend/tenent-onboarding/actions",
  entities: [User, Unit, Agreement, ParkingSlot, Payment]
}

route TenentManagementRoute { path: "/tenent-management", to: TenentManagement }
page TenentManagement {
  component: import { TenentManagement } from "@src/owner/frontend/tenent-management/tenent-management-page"
}

query getTenentDetailList{
  fn: import { getTenentDetailList } from "@src/owner/backend/tenent-management/querys",
  entities: [Unit, Building]
}

route TenantDetailPageRoute { path: "/tenent-detail/:tenentId", to: TenantDetailPage }
page TenantDetailPage {
  component: import { TenantDetailPage } from "@src/owner/frontend/tenent-detail/tenent-detail"
}

query getTenantProfileByUnitId{
  fn: import { getTenantProfileByUnitId } from "@src/owner/backend/tenant-detail/querys",
  entities: [Unit, User]
}

query getTenantAgreementByUnitId{
  fn: import { getTenantAgreementByUnitId } from "@src/owner/backend/tenant-detail/querys",
  entities: [Unit, Agreement]
}

query getTenantParkingByUnitId{
  fn: import { getTenantParkingByUnitId } from "@src/owner/backend/tenant-detail/querys",
  entities: [ParkingSlot]
}

route ParkingPageRoute { path: "/parking-detail", to: ParkingPage }
page ParkingPage {
  component: import { ParkingPage } from "@src/owner/frontend/parking/parking-page"
}

query getBuildingParkingDetail {
  fn: import { getBuildingParkingDetail } from "@src/owner/backend/parking/querys",
  entities: [Building, Society]
}

crud ParkingSlots {
  entity: ParkingSlot,
  operations: {
    get: {},
    getAll: {},
    create: {},
    update: {},
    delete: {}
  },
}

route PaymentPageRoute { path: "/payment-detail", to: PaymentPage }
page PaymentPage {
  component: import { PaymentPage } from "@src/owner/frontend/payments/payment-page"
}

query getPaymentSummary {
  fn: import { getPaymentSummary } from "@src/owner/backend/payments/querys",
  entities: [Society, Payment]
}

action makePaymentPaid {
  fn: import { makePaymentPaid } from "@src/owner/backend/payments/actions",
  entities: [Society, Payment]
}

query getPaymentList {
  fn: import { getPaymentList } from "@src/owner/backend/payments/querys",
  entities: [Society, Payment]
}

route TenantDashboardRoute { path: "/tenant", to: TenantDashboard }
page TenantDashboard{
  authRequired: true,
  component: import { TenantDashboard } from "@src/tenant/frontend/dashboard.tsx"
}

